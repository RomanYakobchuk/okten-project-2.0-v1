version: "3.0"

services:
  server:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "5050:8080"
    volumes:
      - ./server:/app/server
      - /app/server/node_modules
    restart: on-failure
    command: >
      sh -c "cd /app/server && npm i && npx nodemon"

  socket:
    container_name: socket
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "5000:8000"
    volumes:
        - ./socket:/app/socket
        - /app/socket/node_modules
    restart: on-failure
    command: >
      sh -c "cd /app/socket && npm i && npx nodemon"

  statistics:
    container_name: statistics
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "5555:8888"
    volumes:
        - ./statistics:/app/statistics
        - /app/statistics/node_modules
    restart: on-failure
    command: >
      sh -c "cd /app/statistics && npm i && npx nodemon src/index.ts"

  db:
    image: mongo
    container_name: mongo
    env_file:
      - .env
    ports:
      - "27018:27017"
    restart: on-failure
    volumes:
      - ./mongo_db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  web:
    image: nginx:alpine
    container_name: web
    ports:
      - "80:80"
    restart: on-failure
    volumes:
      - ./client:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
